/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.2/samples
 */

group 'org.sample.jenkins.pipeline'

version '1.0.0'

apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

sourceCompatibility = 1.8

repositories {
    maven { url 'https://repo.jenkins-ci.org/releases/' }
    maven { url 'https://repo.jenkins-ci.org/public/' }
    mavenCentral()
}

dependencies {
    compile(group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-step-api', version: '2.13') {
        artifact {
            name = 'workflow-step-api'
            type = 'jar'
        }
    }

    compile(group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-basic-steps', version: '2.19') {
        artifact {
            name = 'workflow-basic-steps'
            type = 'jar'
        }
    }

    compile (group: 'com.griddynamics.devops', name: 'mpl', version: '1.0.1') {
        artifact {
            name = 'mpl'
            type = 'jar'
        }
    }

    implementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.9', ext: 'pom'
    implementation group: 'org.jenkins-ci.main', name: 'jenkins-core', version: '2.204.1'

    testImplementation group:'com.lesfurets', name:'jenkins-pipeline-unit', version:'1.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0'
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
        classpath 'org.jacoco:org.jacoco.core:0.8.1'
    }
}

sourceSets {
    main {
        groovy {
            srcDirs = ['vars']
        }
    }

    test {
        groovy {
            srcDirs = ['test']
        }
    }
}

test {
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
    useJUnitPlatform()

    testLogging {
        showStandardStreams true
        events "PASSED", "FAILED", "SKIPPED"

        // set options for log level DEBUG and INFO
        debug {
            events "STARTED",
                    "FAILED",
                    "PASSED",
                    "SKIPPED",
                    "STANDARD_ERROR",
                    "STANDARD_OUT"
            exceptionFormat "FULL"
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
					println("done")
        }
    }
}

jacocoTestReport {

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport
